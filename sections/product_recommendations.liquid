<hr>
<div class="product-template__container page-width" itemscope itemtype="http://schema.org/Product" id="ProductSection-{{ section.id }}" data-section-id="{{ section.id }}" data-section-type="product" data-enable-history-state="true">
 
{% comment %}
  Number of related items per row,
  and number of rows.
{% endcomment %}

{% assign number_of_related_products_per_row = section.settings.related_grid_num %}
{% assign number_of_rows = section.settings.related_grid_row %}

{% comment %}
  Heading.
  Leave blank if you don't need one.
{% endcomment %}

{% assign heading = section.settings.related_title %}

{% comment %}
  Set either or both to true, if you want
  to limit yourself to items with same vendor, and/or type.
{% endcomment %}

{% assign same_vendor = false %}
{% assign same_type = false %}

{% comment %}
  Collections to ignore.
  Never pick related items from those.
{% endcomment %}

{% assign exclusions = 'frontpage,all' | split: ',' %}

{% comment %}
  Looking for a relevant collection.
{% endcomment %}

{% if product.metafields.c_f['Related Products'] %}
  {% assign collection = collections[product.metafields.c_f['Related Products']] %}
{% endif %}

{% assign found_a_collection = false %}
{% if collection and collection.all_products_count > 1 %}
  {% unless exclusions contains collection.handle %}
    {% assign found_a_collection = true %}
  {% endunless %}
{% endif %}
{% unless found_a_collection %}
  {% for c in product.collections %}
    {% unless exclusions contains c.handle or c.all_products_count < 2 %}
      {% assign found_a_collection = true %}
      {% assign collection = c %}
      {% break %}
    {% endunless %}
  {% endfor %}
{% endunless %}

{% comment %}
  If we have a relevant collection.
{% endcomment %}

{% if found_a_collection %}

  {% assign counter = 0 %}
  {% assign break_at = number_of_rows | times: number_of_related_products_per_row %}
  {% assign current_product = product %}

    {% case number_of_related_products_per_row %}
    {% when '1' %}
      {% assign grid_item_width = '' %}
    {% when '2' %}
      {% assign grid_item_width = 'large--one-half medium--one-half' %}
    {% when '3' %}
      {% assign grid_item_width = 'large--one-third medium--one-half' %}
    {% when '4' %}
      {% assign grid_item_width = 'large--one-quarter medium--one-third small--one-half' %}
    {% when '5' %}
      {% assign grid_item_width = 'large--one-fifth medium--one-third small--one-half' %}
    {% when '6' %}
      {% assign grid_item_width = 'large--one-sixth medium--one-third small--one-half' %}
    {% else %}
      {% assign grid_item_width = 'large--one-quarter medium--one-third small--one-half' %}
  {% endcase %}


  {% capture related_items %}
 
    {% for product in collection.products %}
      {% unless product.handle == current_product.handle %}
         {% unless same_vendor and current_product.vendor != product.vendor %}
           {% unless same_type and current_product.type != product.type %}
    
   
                    {% include 'product-grid' hideRelated:true,hideQuickView:true ,show_second_image : true %}
  
           {% endunless %}
        {% endunless %}
      {% endunless %}
    {% endfor %}
  
  {% endcapture %}
  {% assign related_items = related_items | trim %}
  {% unless related_items == blank %}
 <div class="related-product-slider">
    <div class="container">
      {% unless heading == blank %}
       <div class="row">
         <div class="col-md-12">
		  <h3>{{ heading }}</h3>
		 </div>
	   </div>
      {% endunless %}
      <div class="row">
       <div class="col-md-12">
        <div id="relatedProducts" class="owl-carousel" >
        {{ related_items }}
      </div>
        </div>
      </div>
    </div>
  </div>
  {% endunless %}  
{% endif %}
  
</div>




<div class="section-spacer">
<div class="container">
  <div class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=10">
    {%- if recommendations.performed and recommendations.products_count > 0 -%}
    <div id="SimilarProductsMain" class="recent-product">
      <div class="recent-product-header shopify__top__section">
        <h4>{{'products.product.similar_products' | t}}</h4>
      </div>
      <div class="recent-product-slide">
        {%- for product in recommendations.products -%}
        <div class="item">
          <div class="slider-content">
            {% include 'product-grid' hideRelated:true,hideQuickView:true ,show_second_image : true %}
          </div>
        </div>
      {%- endfor -%}
      </div>
    </div>
  {%- endif -%}
  </div>

</div>
</div>
    
    <script type="application/json" name="slider-json">    
         {
          "slidesToShow":6,
          "slidesToScroll":1,
          "infinite":true,
          "draggable":false,
          "cssEase": "linear",
         "dots":false,
          "autoplay":false,
          "arrows":true,
          "prevArrow":"<button type=\"button\" class=\"slick-prev\" aria-label=\"Prev\"><span><svg aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 24 24\" role=\"img\" width=\"24px\" height=\"24px\" fill=\"none\"><path stroke=\"currentColor\" stroke-width=\"1.5\" d=\"M15.526 18.966L8.559 12l6.967-6.967\"></path></svg></span></button>",
          "nextArrow":"<button type=\"button\" class=\"slick-next\" aria-label=\"Next\"><span><svg aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 24 24\" role=\"img\" width=\"24px\" height=\"24px\" fill=\"none\"><path stroke=\"currentColor\" stroke-width=\"1.5\" d=\"M8.474 18.966L15.44 12 8.474 5.033\"></path></svg></span></button>",
          "responsive":[
          	{
            "breakpoint": 1440,
              "settings": {
              	"slidesToShow": 5
              }
            },
          	{
            "breakpoint": 1199,
              "settings": {
              	"slidesToShow": 4
              }
            },
          	{
            "breakpoint": 767,
                "settings": "unslick"
            }
          ]
        }
    </script>
  
  <script>
    
    const productRecommendationsSection = document.querySelector('.product-recommendations');
      const url = productRecommendationsSection.dataset.url;
  
      fetch(url)
        .then(response => response.text())
        .then(text => {
          const html = document.createElement('div');
          html.innerHTML = text;
          const recommendations = html.querySelector('.product-recommendations');
  
          if (recommendations && recommendations.innerHTML.trim().length) {
            productRecommendationsSection.innerHTML = recommendations.innerHTML;
          }
        })
        .catch(e => {
          console.error(e);
        });
    $(document).ready(function(){
      recommendedProductsSlider();
    })
    function recommendedProductsSlider(){
      var recomend = setInterval(function(){
        if($('.recent-product-slide').length > 0 ){ 
          if(!($('.recent-product-slide').hasClass('slick-initialized'))){
            slickSlider($('.recent-product-slide'))
            showMultipleOptions(); 
          }
          clearInterval(recomend);
        }
      },100)
      setTimeout(function(){
        clearInterval(recomend);
      },5000)
    }
    </script>
  {% schema %}
    {
      "name": "t:sections.product_recommendations.name",
      "tag":"section",
		"class":"product-page-recommendations",
      "settings": []
    }
  {% endschema %}
  