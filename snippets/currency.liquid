<div class="currency-block">
  <localization-form>
    {% form 'localization' %}
    <div class="disclosure btn-group currency-dropdown">
      <label class="disclosure__button dropdown-toggle dropdown-label" aria-expanded="false" aria-controls="CountryList">
        {{ localization.country.currency.iso_code }}
      </label>

      <ul id="CountryList" role="list" class="disclosure__list dropdown-menu currency-menu" hidden>
        {% for country in localization.available_countries %}
        <li class="disclosure__item" tabindex="-1">
          <a class="dropdown-item" href="#"{% if country.iso_code == localization.country.iso_code %} aria-current="true"{% endif %} data-value="{{ country.iso_code }}">
            {{ country.currency.iso_code }}
          </a>
        </li>
        {% endfor %}
      </ul>

      <input type="hidden" name="country_code" value="{{ localization.country.iso_code }}">
    </div>
    {% endform %}
  </localization-form>
</div>

<script>
  class LocalizationForm extends HTMLElement {
    constructor() {
      super();
      this.elements = {
        input: this.querySelector('input[name="locale_code"], input[name="country_code"]'),
        button: this.querySelector('label'),
        panel: this.querySelector('ul'),
      };
      this.elements.button.addEventListener('click', this.openSelector.bind(this));
      this.elements.button.addEventListener('focusout', this.closeSelector.bind(this));
      this.addEventListener('keyup', this.onContainerKeyUp.bind(this));

      this.querySelectorAll('a').forEach(item => item.addEventListener('click', this.onItemClick.bind(this)));
    }

    hidePanel() {
      this.elements.button.setAttribute('aria-expanded', 'false');
      this.elements.panel.setAttribute('hidden', true);
    }

    onContainerKeyUp(event) {
      if (event.code.toUpperCase() !== 'ESCAPE') return;

      this.hidePanel();
      this.elements.button.focus();
    }

    onItemClick(event) {
      event.preventDefault();
      const form = this.querySelector('form');
      this.elements.input.value = event.currentTarget.dataset.value;
      if (form) form.submit();
    }

    openSelector() {
      this.elements.button.focus();
      this.elements.panel.toggleAttribute('hidden');
      this.elements.button.setAttribute('aria-expanded', (this.elements.button.getAttribute('aria-expanded') === 'false').toString());
    }

    closeSelector(event) {
      const shouldClose = event.relatedTarget && event.relatedTarget.nodeName === 'LABEL';
      if (event.relatedTarget === null || shouldClose) {
        this.hidePanel();
      }
    }
  }

  customElements.define('localization-form', LocalizationForm);
</script>